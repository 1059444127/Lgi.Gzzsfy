//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 4.0.30319.42000 版自动生成。
// 
#pragma warning disable 1591

namespace SendPisResult.HnsfyRegistrationInterface {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="WebServiceSoap", Namespace="http://tempuri.org/")]
    public partial class WebService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback HelloWorldOperationCompleted;
        
        private System.Threading.SendOrPostCallback QuePatiengInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback QuePatiengInfoByXMLOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckFeeOperationOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckFeeOperationByInvoicenumberOperationCompleted;
        
        private System.Threading.SendOrPostCallback CancellationFeeOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public WebService() {
            this.Url = global::SendPisResult.Properties.Settings.Default.SendResult_HnsfyRegistrationInterface_ServiceForward;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event HelloWorldCompletedEventHandler HelloWorldCompleted;
        
        /// <remarks/>
        public event QuePatiengInfoCompletedEventHandler QuePatiengInfoCompleted;
        
        /// <remarks/>
        public event QuePatiengInfoByXMLCompletedEventHandler QuePatiengInfoByXMLCompleted;
        
        /// <remarks/>
        public event CheckFeeOperationCompletedEventHandler CheckFeeOperationCompleted;
        
        /// <remarks/>
        public event CheckFeeOperationByInvoicenumberCompletedEventHandler CheckFeeOperationByInvoicenumberCompleted;
        
        /// <remarks/>
        public event CancellationFeeCompletedEventHandler CancellationFeeCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/HelloWorld", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string HelloWorld() {
            object[] results = this.Invoke("HelloWorld", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void HelloWorldAsync() {
            this.HelloWorldAsync(null);
        }
        
        /// <remarks/>
        public void HelloWorldAsync(object userState) {
            if ((this.HelloWorldOperationCompleted == null)) {
                this.HelloWorldOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHelloWorldOperationCompleted);
            }
            this.InvokeAsync("HelloWorld", new object[0], this.HelloWorldOperationCompleted, userState);
        }
        
        private void OnHelloWorldOperationCompleted(object arg) {
            if ((this.HelloWorldCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HelloWorldCompleted(this, new HelloWorldCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/QuePatiengInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string QuePatiengInfo(string IDCard, string Extype, string DepartMentID, string InpatientNumber, string OutpatientNumber, string Invoicenumber, string OperationType) {
            object[] results = this.Invoke("QuePatiengInfo", new object[] {
                        IDCard,
                        Extype,
                        DepartMentID,
                        InpatientNumber,
                        OutpatientNumber,
                        Invoicenumber,
                        OperationType});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void QuePatiengInfoAsync(string IDCard, string Extype, string DepartMentID, string InpatientNumber, string OutpatientNumber, string Invoicenumber, string OperationType) {
            this.QuePatiengInfoAsync(IDCard, Extype, DepartMentID, InpatientNumber, OutpatientNumber, Invoicenumber, OperationType, null);
        }
        
        /// <remarks/>
        public void QuePatiengInfoAsync(string IDCard, string Extype, string DepartMentID, string InpatientNumber, string OutpatientNumber, string Invoicenumber, string OperationType, object userState) {
            if ((this.QuePatiengInfoOperationCompleted == null)) {
                this.QuePatiengInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQuePatiengInfoOperationCompleted);
            }
            this.InvokeAsync("QuePatiengInfo", new object[] {
                        IDCard,
                        Extype,
                        DepartMentID,
                        InpatientNumber,
                        OutpatientNumber,
                        Invoicenumber,
                        OperationType}, this.QuePatiengInfoOperationCompleted, userState);
        }
        
        private void OnQuePatiengInfoOperationCompleted(object arg) {
            if ((this.QuePatiengInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QuePatiengInfoCompleted(this, new QuePatiengInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/QuePatiengInfoByXML", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string QuePatiengInfoByXML(string xml) {
            object[] results = this.Invoke("QuePatiengInfoByXML", new object[] {
                        xml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void QuePatiengInfoByXMLAsync(string xml) {
            this.QuePatiengInfoByXMLAsync(xml, null);
        }
        
        /// <remarks/>
        public void QuePatiengInfoByXMLAsync(string xml, object userState) {
            if ((this.QuePatiengInfoByXMLOperationCompleted == null)) {
                this.QuePatiengInfoByXMLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQuePatiengInfoByXMLOperationCompleted);
            }
            this.InvokeAsync("QuePatiengInfoByXML", new object[] {
                        xml}, this.QuePatiengInfoByXMLOperationCompleted, userState);
        }
        
        private void OnQuePatiengInfoByXMLOperationCompleted(object arg) {
            if ((this.QuePatiengInfoByXMLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QuePatiengInfoByXMLCompleted(this, new QuePatiengInfoByXMLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckFeeOperation", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CheckFeeOperation(string registeredserialnumber, string operatorid, string departmentid, string datime, string type) {
            object[] results = this.Invoke("CheckFeeOperation", new object[] {
                        registeredserialnumber,
                        operatorid,
                        departmentid,
                        datime,
                        type});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CheckFeeOperationAsync(string registeredserialnumber, string operatorid, string departmentid, string datime, string type) {
            this.CheckFeeOperationAsync(registeredserialnumber, operatorid, departmentid, datime, type, null);
        }
        
        /// <remarks/>
        public void CheckFeeOperationAsync(string registeredserialnumber, string operatorid, string departmentid, string datime, string type, object userState) {
            if ((this.CheckFeeOperationOperationCompleted == null)) {
                this.CheckFeeOperationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckFeeOperationOperationCompleted);
            }
            this.InvokeAsync("CheckFeeOperation", new object[] {
                        registeredserialnumber,
                        operatorid,
                        departmentid,
                        datime,
                        type}, this.CheckFeeOperationOperationCompleted, userState);
        }
        
        private void OnCheckFeeOperationOperationCompleted(object arg) {
            if ((this.CheckFeeOperationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckFeeOperationCompleted(this, new CheckFeeOperationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckFeeOperationByInvoicenumber", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CheckFeeOperationByInvoicenumber(string Invoicenumber, string operatorid, string departmentid, string datime, string type) {
            object[] results = this.Invoke("CheckFeeOperationByInvoicenumber", new object[] {
                        Invoicenumber,
                        operatorid,
                        departmentid,
                        datime,
                        type});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CheckFeeOperationByInvoicenumberAsync(string Invoicenumber, string operatorid, string departmentid, string datime, string type) {
            this.CheckFeeOperationByInvoicenumberAsync(Invoicenumber, operatorid, departmentid, datime, type, null);
        }
        
        /// <remarks/>
        public void CheckFeeOperationByInvoicenumberAsync(string Invoicenumber, string operatorid, string departmentid, string datime, string type, object userState) {
            if ((this.CheckFeeOperationByInvoicenumberOperationCompleted == null)) {
                this.CheckFeeOperationByInvoicenumberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckFeeOperationByInvoicenumberOperationCompleted);
            }
            this.InvokeAsync("CheckFeeOperationByInvoicenumber", new object[] {
                        Invoicenumber,
                        operatorid,
                        departmentid,
                        datime,
                        type}, this.CheckFeeOperationByInvoicenumberOperationCompleted, userState);
        }
        
        private void OnCheckFeeOperationByInvoicenumberOperationCompleted(object arg) {
            if ((this.CheckFeeOperationByInvoicenumberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckFeeOperationByInvoicenumberCompleted(this, new CheckFeeOperationByInvoicenumberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CancellationFee", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CancellationFee(string prescription, string operatorid, string departmentid, string datime, string type) {
            object[] results = this.Invoke("CancellationFee", new object[] {
                        prescription,
                        operatorid,
                        departmentid,
                        datime,
                        type});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CancellationFeeAsync(string prescription, string operatorid, string departmentid, string datime, string type) {
            this.CancellationFeeAsync(prescription, operatorid, departmentid, datime, type, null);
        }
        
        /// <remarks/>
        public void CancellationFeeAsync(string prescription, string operatorid, string departmentid, string datime, string type, object userState) {
            if ((this.CancellationFeeOperationCompleted == null)) {
                this.CancellationFeeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCancellationFeeOperationCompleted);
            }
            this.InvokeAsync("CancellationFee", new object[] {
                        prescription,
                        operatorid,
                        departmentid,
                        datime,
                        type}, this.CancellationFeeOperationCompleted, userState);
        }
        
        private void OnCancellationFeeOperationCompleted(object arg) {
            if ((this.CancellationFeeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CancellationFeeCompleted(this, new CancellationFeeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void HelloWorldCompletedEventHandler(object sender, HelloWorldCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HelloWorldCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HelloWorldCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void QuePatiengInfoCompletedEventHandler(object sender, QuePatiengInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QuePatiengInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QuePatiengInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void QuePatiengInfoByXMLCompletedEventHandler(object sender, QuePatiengInfoByXMLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QuePatiengInfoByXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QuePatiengInfoByXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void CheckFeeOperationCompletedEventHandler(object sender, CheckFeeOperationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckFeeOperationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckFeeOperationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void CheckFeeOperationByInvoicenumberCompletedEventHandler(object sender, CheckFeeOperationByInvoicenumberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckFeeOperationByInvoicenumberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckFeeOperationByInvoicenumberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void CancellationFeeCompletedEventHandler(object sender, CancellationFeeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CancellationFeeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CancellationFeeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591